name: ATELIER 3 - Preview Flask avec Docker + Ngrok

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  preview-server:
    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Cloner le repo
      uses: actions/checkout@v3

    - name: üê≥ Construire l'image Docker
      run: docker build -t flask-app .

    - name: üöÄ Lancer l'app Flask avec Docker
      run: docker run -d -p 5000:5000 --name flask-server flask-app

    - name: üåê Installer ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && \
        sudo apt update && sudo apt install ngrok -y

    - name: üîê Authentifier ngrok avec le token
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}

    - name: üåç D√©marrer ngrok et afficher l'URL publique
      id: expose
      run: |
        ngrok http http://localhost:5000 > ngrok.log &
        sleep 5
        curl http://localhost:4040/api/tunnels
        URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "üîó Lien temporaire : $URL"
        echo "NGROK_URL=$URL" >> $GITHUB_ENV

    - name: üß™ Tester l'API via ngrok avec pytest
      run: |
        pip install pytest requests
        echo "
import requests

def test_ngrok_access():
    url = '${{ env.NGROK_URL }}'
    r = requests.get(url)
    assert r.status_code == 200
" > test_api.py
        pytest test_api.py

    - name: ‚è≥ Attente de 120 secondes pour acc√©der manuellement √† l'URL
      run: sleep 120
